@using System.Text.Json
<link rel="stylesheet" href="~/wwwroot/css/styles.css">

@{
    ViewData["Title"] = "Home Page";
    var booksJson = await System.IO.File.ReadAllTextAsync("Resources/books.json");

    var books = JsonSerializer.Deserialize<IEnumerable<Book>>(booksJson, new JsonSerializerOptions {
        PropertyNameCaseInsensitive = true,
    });
}

<h2>Add Book</h2>
<form asp-controller="Book" asp-action="/Add" method="post">
    <label>
        Name: <input type="text" name="Name">
    </label>
    <label>
        Author: <input type="text" name="Author">
    </label>
    <label>
        Year: <input type="text" name="PublicationYear">
    </label>
    <label>
        Genre: <input type="text" name="Genre">
    </label>
    <label>
        Language: <input type="text" name="Language">
    </label>
    <label>
        Description: <input type="text" name="Description">
    </label>

    <button asp-controller="Book" asp-action="Add">Add</button>
</form>


<h2>Library</h2>
<div>
    @foreach (var book in books)
    {
        <p>Name: @(book?.Name ?? "UNKNOWN")</p>
        <p>Author: @(book?.Author ?? "UNKNOWN")</p>
        <p>Year: @(book?.PublicationYear.ToString() ?? "UNKNOWN")</p>
        <p>Genre: @(book?.Genre ?? "UNKNOWN")</p>
        <p>Language: @(book?.Language ?? "UNKNOWN")</p>
        <p>Description: @(book?.Description ?? "UNKNOWN")</p>
        <hr>
    }
</div>